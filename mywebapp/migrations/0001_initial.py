# Generated by Django 4.2.7 on 2023-11-28 11:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Client Name')),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.EmailField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=100, verbose_name='Invoice No')),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('mail_alert_count', models.IntegerField(default=0)),
                ('recieved_date', models.DateField(blank=True, null=True, verbose_name='Recieved Date')),
                ('recieved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('comments', models.CharField(blank=True, max_length=300, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mywebapp.client')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='cc_mail_ids',
            field=models.ManyToManyField(blank=True, related_name='cc_clients', to='mywebapp.email'),
        ),
        migrations.AddField(
            model_name='client',
            name='to_email_ids',
            field=models.ManyToManyField(blank=True, related_name='to_clients', to='mywebapp.email'),
        ),
    ]
